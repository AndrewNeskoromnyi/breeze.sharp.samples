<UserControl x:Class="Todo_Net.TodoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:Todo_Net"
             mc:Ignorable="d"
             x:Name="ThisUserControl"
             >

    <UserControl.Resources>

        <local:ArchivedToBrushConverter x:Key="ArchivedToBrushConverter" />
        <local:DoneToStrikeoutConverter x:Key="DoneToStrikeoutConverter" />
        <local:SeverityToBrushConverter x:Key="SeverityToBrushConverter" />

        <!-- Styles to control visibility of data template elements based on selection of list box item -->
        <Style x:Key="VisibleIfSelected" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="VisibleIfNotSelected" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Style to make border fade in and out when message is changed -->
        <Style x:Key="ToastStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Opacity" Value="0" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame Value="1" KeyTime="0:0:1.0" />
                                <SplineDoubleKeyFrame Value="1" KeyTime="0:0:3.0" />
                                <SplineDoubleKeyFrame Value="0" KeyTime="0:0:4.0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    
    <!-- The main layout grid, including the todos list and the toasters -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="400" />
            <ColumnDefinition Width="300" />
        </Grid.ColumnDefinitions>

        <!-- Layout grid for the todos list -->
        <Grid Grid.Row="0"
              Grid.Column="1"
              Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Titles -->
            <TextBlock Grid.Row="0"
                       FontSize="48"
                       FontWeight="Bold"
                       HorizontalAlignment="Center"
                       Text="Breeze Todos" />

            <TextBlock Grid.Row="1"
                       FontSize="24"
                       FontWeight="Bold"
                       HorizontalAlignment="Center"
                       Text="with WPF" />

            <!-- New item entry text box with watermark using WPF Extended Toolkit -->
            <xctk:WatermarkTextBox Grid.Row="2"
                                   Margin="0,10,0,10"
                                   Padding="15,10,15,10"
                                   BorderThickness="2"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Watermark="What needs to be done?" 
                                   Text="{Binding NewTodoDescription, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                   TextWrapping="Wrap" 
                                   KeyDown="WatermarkTextBox_KeyDown" />

            <!-- Controls -->
            <StackPanel Grid.Row="3" 
                        Orientation="Horizontal">
                <Button x:Name="markAllAsDoneButton" 
                        Margin="10"
                        Command="{Binding MarkAllAsDoneCommand}">
                    <TextBlock FontWeight="Bold"
                               FontSize="14"
                       Text="Mark all as complete" />
                </Button>
                <CheckBox Margin="10"
                          IsChecked="{Binding ShowArchived}">
                    <TextBlock FontWeight="Bold"
                               FontSize="14"
                               Foreground="Goldenrod"
                               Text="Show Archived" />
                </CheckBox>
            </StackPanel>

            <!-- The main todo list -->
            <ListView Grid.Row="4"
                      x:Name="itemsListView"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ItemsSource="{Binding Items}"
                      SelectedItem="{Binding SelectedItem}">
                
                <!-- Makes the items stretch to full width of the list view -->
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                
                <ListView.ItemTemplate>
                    <DataTemplate>
                        
                        <!-- Border provides gray separator line -->
                        <Border x:Name="templateBorder"
                                Background="White"
                                BorderBrush="Gray"
                                BorderThickness="0,0,0,1">
                            
                            <!-- Grid holding selected/unselected item displays -->
                            <Grid x:Name="templateGrid"
                                  Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                
                                <!-- Done checkbox for item -->
                                <Grid Grid.Column="0" 
                                      Style="{StaticResource VisibleIfNotSelected}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Grid.Column="0" 
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding IsDone, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
                                    <TextBlock Grid.Column="1" 
                                               Margin="5,0,5,0" 
                                               VerticalAlignment="Center"
                                               FontSize="16"
                                               FontWeight="Bold"
                                               Text="{Binding Description, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                               TextWrapping="Wrap"
                                               Foreground="{Binding IsArchived, Converter={StaticResource ArchivedToBrushConverter}}"
                                               TextDecorations="{Binding IsDone, Converter={StaticResource DoneToStrikeoutConverter}}"
                                               />
                                </Grid>
                                
                                <!-- Item delete button.  Note command binding to view model, not data item --> 
                                <Button Grid.Column="1" 
                                        VerticalAlignment="Center"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Command="{Binding ElementName=ThisUserControl, Path=DataContext.DeleteCommand}"
                                        CommandParameter="{Binding}">
                                    <TextBlock FontSize="20"
                                               FontWeight="Bold" 
                                               Text="X" />
                                </Button>
                                
                                <!-- Item description edit text box hides above checkbox and button if visible -->
                                <TextBox Grid.Column="0"
                                         Grid.ColumnSpan="2"
                                         Padding="5"
                                         FontSize="16"
                                         FontWeight="Bold"
                                         Text="{Binding Description, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" 
                                         TextWrapping="Wrap"
                                         Style="{StaticResource VisibleIfSelected}" 
                                         KeyDown="TextBox_KeyDown" />
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!-- Bottmo control buttons -->
            <StackPanel Grid.Row="5" 
                        VerticalAlignment="Bottom"
                        Orientation="Horizontal">
                <Button Margin="5"
                        Padding="3" 
                        Content="Purge" 
                        Command="{Binding PurgeCommand}"/>
                <Button Margin="5"
                        Padding="3" 
                        Content="Reset" 
                        Command="{Binding ResetCommand}"/>
            </StackPanel>

        </Grid>
        
        <!-- Bottom border displays status and archive button -->
        <Border Grid.Row="1"
                Grid.Column="1"
                Height="Auto"
                Background="DarkBlue">
            <Grid>
                <StackPanel Orientation="Horizontal" 
                            Margin="5" 
                            HorizontalAlignment="Left">
                    <TextBlock Foreground="White"
                               FontWeight="Bold"
                               Text="{Binding NumUncompleted}" />
                    <TextBlock Margin="5,0,0,0" 
                               Foreground="White"
                               FontWeight="Bold"
                               Text="Items left" />
                </StackPanel>
                       
                <Button Margin="5" 
                        MinWidth="100"
                        HorizontalAlignment="Right"
                        Background="DarkBlue"
                        Command="{Binding ArchiveCommand}" >
                    <TextBlock Foreground="White"
                               FontWeight="Bold"
                               Text="{Binding NumArchivable, StringFormat=Archive {0} completed items}" />
                </Button>
            </Grid>
        </Border>
        
        <!-- Toaster -->
        <StackPanel Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2" 
                    VerticalAlignment="Bottom">

            <!-- Main toast displays saves, warnings and errors -->
            <Border Margin="5"
                    MinHeight="50"
                    CornerRadius="3"
                    Style="{StaticResource ToastStyle}" 
                    Background="{Binding Severity, Converter={StaticResource SeverityToBrushConverter}, NotifyOnTargetUpdated=True}" >
                <TextBlock Margin="10"
                           Foreground="White"
                           TextWrapping="Wrap"
                           Text="{Binding Message}" />
            </Border>

            <!-- Second toast displays Fetch messages to avoid obscuring other notifications -->
            <Border Margin="5"
                    MinHeight="50"
                    CornerRadius="3"
                    Style="{StaticResource ToastStyle}"
                    Background="{Binding Severity2, Converter={StaticResource SeverityToBrushConverter}, NotifyOnTargetUpdated=True}" >

                <TextBlock Margin="10"
                       Foreground="White"
                       TextWrapping="Wrap"
                       Text="{Binding Message2}" />
            </Border>
        </StackPanel>
    </Grid>
</UserControl>
